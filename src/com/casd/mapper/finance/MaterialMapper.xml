<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.casd.dao.finance.MaterialDao">
    <!-- 解决表名与字段不匹配 -->
    <!-- type 类的全限定名, 或者一个类型别名
         id 当前命名空间中的一个唯一标识，用于标识一个result map
         result 注入到字段或 JavaBean 属性的普通结果
     -->

    
    <!-- id 在命名空间中唯一的标识符，可以被用来引用这条语句
         resultMap 外部 resultMap 的命名引用
         resultType 从这条语句中返回的期望类型的类的完全限定名或别名。
     -->
     <!-- 存在时修改 不存在时添加 -->
    <insert id="addMaterial"  useGeneratedKeys="true" keyProperty="construct_material_id" parameterType="com.casd.entity.finance.Material" >
        insert into  construct_material_table (construct_material_id,construct_material_name,construct_material_remarks,construct_material_seriesId,construct_material_num) 
        VALUES  
	        (#{construct_material_id},#{construct_material_name},#{construct_material_remarks},#{construct_material_seriesId},#{construct_material_num})  
	        on duplicate key update construct_material_id=#{construct_material_id},construct_material_name=#{construct_material_name},
	    						construct_material_remarks=#{construct_material_remarks},construct_material_seriesId=#{construct_material_seriesId}
	    						,construct_material_num=#{construct_material_num}
    </insert>
    <!-- 材料列表 -->
    <select id="materialList" parameterType="map" resultType="map">
        select * from ${where} ${limit}
    </select>
     <select id="getMaterialCount" parameterType="map" resultType="int">
        select COUNT(1) from ${where} 
    </select>
    
    
     <select id="getMaterialById" parameterType="map" resultType="map">
         select * from ${where} ${limit}
    </select>
      <select id="getCountModel" parameterType="map" resultType="int">
        select COUNT(1) from ${where} 
    </select>
    
    <insert id="addMaterialModel" useGeneratedKeys="true" keyProperty="construct_material_model_id" parameterType="com.casd.entity.finance.MaterialModel" >
        insert into  construct_material_model 
        (construct_material_model_id,construct_material_model_name,construct_material_model_parentid, 
         construct_material_model_remarks,construct_material_model_unit,construct_materail_model_num) 
        VALUES (
         #{construct_material_model_id},#{construct_material_model_name},#{construct_material_model_parentid},
         #{construct_material_model_remarks},#{construct_material_model_unit},#{construct_materail_model_num} )  
	  
	    on duplicate key update 
	     construct_material_model_id=#{construct_material_model_id},construct_material_model_name=#{construct_material_model_name},
	    					
	     construct_material_model_remarks=#{construct_material_model_remarks},construct_material_model_unit=#{construct_material_model_unit},
	     
	     construct_materail_model_num=#{construct_materail_model_num}
    </insert> 
    
    
     <delete id="deleteMateria" parameterType="map">
       DELETE FROM  construct_material_model ${where}
     </delete>
           
      <!--连表删除  -->
     <delete id="deletemultiple" parameterType="map">
      DELETE construct_material_model,construct_material_table from ${where}
     </delete>
     
     <insert id="saveSeries" useGeneratedKeys="true" keyProperty="construct_material_seriesID" parameterType="com.casd.entity.finance.MaterialSeries">
		insert into
		construct_material_series(construct_material_seriesID,construct_material_seriesName,remarks,construct_material_seriesSuppliers,construct_material_num)
		VALUES
		(#{construct_material_seriesID},#{construct_material_seriesName},#{remarks}
		,#{construct_material_seriesSuppliers},#{construct_material_num})
		on duplicate key update
		construct_material_seriesID=#{construct_material_seriesID},
		construct_material_seriesName=#{construct_material_seriesName},
		remarks=#{remarks},
		construct_material_seriesSuppliers=#{construct_material_seriesSuppliers},
		construct_material_num=#{construct_material_num}
	</insert>
	
	
	<select id="selectData" parameterType="map" resultType="map">
        select ${fields} from ${where} 
    </select>
    
       <delete id="delete_Series" parameterType="map">
       DELETE FROM construct_material_series ${where}
       </delete>
       
       
       
       <insert id="insertData" parameterType="map"  >
       		INSERT INTO ${table} 
       		( 
       		     construct_material_supplierId,construct_material_modelId,construct_material_unit ,construct_material_model,construct_material_name 
       		 )  
       		 VALUES  ${fieds}  
       </insert>
       
       
       <select id="isExistQua" parameterType="string" resultType="int">
         select count(construct_project_quantities_id) from construct_project_quantities where construct_project_quantities_modelId=#{construct_project_quantities_modelId} 
    </select>
       
</mapper>



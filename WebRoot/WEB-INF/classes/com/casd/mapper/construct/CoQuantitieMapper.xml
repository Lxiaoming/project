<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.casd.dao.construct.CoQuantitiesDao">
    <!-- 解决表名与字段不匹配 -->
    <!-- type 类的全限定名, 或者一个类型别名
         id 当前命名空间中的一个唯一标识，用于标识一个result map
         result 注入到字段或 JavaBean 属性的普通结果
     -->

    
    <!-- id 在命名空间中唯一的标识符，可以被用来引用这条语句
         resultMap 外部 resultMap 的命名引用
         resultType 从这条语句中返回的期望类型的类的完全限定名或别名。
     -->
    <!-- 项目部列表 -->
    
         <insert id="insert" parameterType="com.casd.entity.construct.CoQuantities">
          insert into  construct_project_quantities (construct_project_quantities_id,construct_project_quantities_name,construct_project_quantities_model,
          construct_project_quantities_num,construct_project_quantities_unit,construct_project_quantities_price,construct_project_quantities_remarks,
          construct_project_quantities_conId,construct_project_quantities_modelId,construct_project_quantities_auxiliaryNum
          
          ) 
            VALUES  
	        (#{construct_project_quantities_id},#{construct_project_quantities_name},#{construct_project_quantities_model}
	        ,#{construct_project_quantities_num},#{construct_project_quantities_unit},#{construct_project_quantities_price}
	        ,#{construct_project_quantities_remarks},#{construct_project_quantities_conId},#{construct_project_quantities_modelId}
	        ,#{construct_project_quantities_auxiliaryNum}
	        ) 
	         
	        on duplicate key update construct_project_quantities_id=#{construct_project_quantities_id},construct_project_quantities_name=#{construct_project_quantities_name},
	    						construct_project_quantities_model=#{construct_project_quantities_model},construct_project_quantities_num=#{construct_project_quantities_num},
	    						construct_project_quantities_unit=#{construct_project_quantities_unit},construct_project_quantities_price=#{construct_project_quantities_price},
	    						construct_project_quantities_remarks=#{construct_project_quantities_remarks},construct_project_quantities_conId=#{construct_project_quantities_conId}
        						,construct_project_quantities_modelId=#{construct_project_quantities_modelId},construct_project_quantities_auxiliaryNum=#{construct_project_quantities_auxiliaryNum}
         </insert>
       
       
       <delete id="deleteQuantities" parameterType="map">
       DELETE FROM construct_project_quantities ${where}
       </delete>
       
        <select id="isExistPur" parameterType="string" resultType="int">
         select count(construct_purchase_entryId) from construct_purchase_entry where construct_purchase_quantitiesId=#{construct_purchase_quantitiesId} 
    </select>
       
       <select id="existQuan" parameterType="map" resultType="int">
         select count(construct_project_quantities_id) from construct_project_quantities where construct_project_quantities_modelId=#{modelId} and construct_project_quantities_conId= #{conId}   
    </select>
      
       
     <update id="sum_quantities" parameterType="map" >
     
     	UPDATE construct_project_quantities set construct_project_quantities_num =construct_project_quantities_num+#{num} ,
     	construct_project_quantities_auxiliaryNum =construct_project_quantities_auxiliaryNum+#{auxiliaryNum}
     	where construct_project_quantities_modelId=#{modelId} and  construct_project_quantities_conId=  #{conId}
     
     </update> 
     
       
</mapper>



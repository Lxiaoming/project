<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    <!-- 解决表名与字段不匹配 -->
<mapper namespace="com.casd.dao.uc.OrgDao">
    <!-- type 类的全限定名, 或者一个类型别名
         id 当前命名空间中的一个唯一标识，用于标识一个result map
         result 注入到字段或 JavaBean 属性的普通结果
     -->

    
    <!-- id 在命名空间中唯一的标识符，可以被用来引用这条语句
         resultMap 外部 resultMap 的命名引用
         resultType 从这条语句中返回的期望类型的类的完全限定名或别名。
     -->
 
     
     <insert id="saveCompany" parameterType="com.casd.entity.uc.Company">
        insert into  uc_company (company_id,company_name) 
        VALUES  
	        (#{company_id},#{company_name})  
	        on duplicate key update company_id=#{company_id},company_name=#{company_name}
    </insert>
    
    <select id="deleCompany" parameterType="map" >
        DELETE FROM ${where} WHERE company_id IN (${what})  
    </select>
     
     
    <insert id="saveCenter" parameterType="com.casd.entity.uc.Center">
        insert into  uc_center (center_id,center_name,center_companyId) 
        VALUES  
	        (#{center_id},#{center_name},#{center_companyId})  
	        on duplicate key update center_id=#{center_id},center_name=#{center_name},center_companyId=#{center_companyId}
    </insert>
    
    <select id="deleCenter" parameterType="map" >
        DELETE FROM ${where} WHERE center_id IN (${what})  
    </select>
    
    
    <insert id="saveDepartment" parameterType="com.casd.entity.uc.Department">
        insert into  uc_department (department_id,department_name,department_centerId,department_companyId) 
        VALUES  
	        (#{department_id},#{department_name},#{department_centerId},#{department_companyId})  
	        on duplicate key update department_id=#{department_id},department_name=#{department_name},department_centerId=#{department_centerId},
	        department_companyId=#{department_companyId}
    </insert>
    
    <select id="deleDepartment" parameterType="map" >
        DELETE FROM ${where} WHERE department_id IN (${what})  
    </select>
    


	<select id="queryData"  parameterType="map"  resultType="map">
         select ${what}  from ${where} 
    </select>

</mapper>


